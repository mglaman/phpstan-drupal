<?php

// Catches at level 4.
use Drupal\Core\Block\BlockBase;

function phpstan_fixtures_IfConstantConditionRule() {
    $zero = 0;
    if ($zero) {
    }
}

// Catches at level 0.
function phpstan_fixtures_MissingReturnRule(): string {

}

function phpstan_fixtures_get_app_root(): string {
    $app_root = \Drupal::getContainer()->get('app.root');
    return $app_root . '/core/includes/install.inc';
}

function phpstan_fixtures_module_load_includes_test(): array {
    $module_handler = \Drupal::moduleHandler();
    $module_handler->loadInclude('locale', 'fetch.inc');
    return _locale_translation_default_update_options();
}

function phpstan_fixtures_module_load_includes_negative_test(): void {
    $module_handler = \Drupal::moduleHandler();
    $module_handler->loadInclude('phpstan_fixtures', 'fetch.inc');
}

function phpstan_fixtures_thing_with_anonymous_class(): void {
    $foo = new class(
        [],
        'foo',
        []
    ) extends BlockBase {
        public function build(): array
        {
            return [];
        }
    };
}

function phpstan_fixtures_using_deprecated_constants(): void {
    print SCHEMA_UNINSTALLED;
    print FILE_INSECURE_EXTENSION_REGEX;
    print PREG_CLASS_PUNCTUATION;
}

function phpstan_fixtures_condition_manager_context(): void {
    $condition_manager = \Drupal::service('plugin.manager.condition');
    $configuration = [
        'foo' => 'bar',
        'context' => [
            'entity:type' => 'node',
        ],
    ];
    $foo = $condition_manager->createInstance('barbaz', $configuration);
}
